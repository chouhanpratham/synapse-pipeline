{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "spark8xze761",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "34049b90-0532-4916-b198-09eab316ffda"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/e84d8697-ef3e-4296-9629-cdeb0c1df544/resourceGroups/dp203-8xze761/providers/Microsoft.Synapse/workspaces/synapse8xze761/bigDataPools/spark8xze761",
				"name": "spark8xze761",
				"type": "Spark",
				"endpoint": "https://synapse8xze761.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spark8xze761",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://files@datalake8xze761.dfs.core.windows.net/products.csv', format='csv'\r\n",
					"## If header exists uncomment line below\r\n",
					"##, header=True\r\n",
					")\r\n",
					"display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					" %%pyspark\r\n",
					" df = spark.read.load('abfss://files@datalakexxxxxxx.dfs.core.windows.net/product_data/products.csv', format='csv'\r\n",
					" ## If header exists uncomment line below\r\n",
					" , header=True\r\n",
					" )\r\n",
					" display(df.limit(10))"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					" df_counts = df.groupby(df.Category).count()\r\n",
					" display(df_counts)"
				],
				"execution_count": null
			}
		]
	}
}